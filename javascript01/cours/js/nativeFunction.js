// üìÇ Manipulation des cha√Ænes de caract√®res (String)
// indexOf(substr) - Trouve l'index de la premi√®re occurrence d'une sous-cha√Æne.
console.log("Bonjour".indexOf("o")); // 1

// lastIndexOf(substr) - Trouve la derni√®re occurrence d'une sous-cha√Æne.
console.log("Bonjour".lastIndexOf("o")); // 4

// includes(substr) - V√©rifie si une cha√Æne contient une sous-cha√Æne.
console.log("Bonjour".includes("jour")); // true

// startsWith(substr) - V√©rifie si une cha√Æne commence par une sous-cha√Æne.
console.log("Bonjour".startsWith("Bon")); // true

// endsWith(substr) - V√©rifie si une cha√Æne se termine par une sous-cha√Æne.
console.log("Bonjour".endsWith("our")); // true

// slice(start, end) - Extrait une partie d‚Äôune cha√Æne.
console.log("Bonjour".slice(1, 4)); // "onj"

// substring(start, end) - Similaire √† slice, mais ne prend pas d‚Äôindex n√©gatif.
console.log("Bonjour".substring(1, 4)); // "onj"

// replace(old, new) - Remplace une sous-cha√Æne par une autre.
console.log("Bonjour".replace("jour", "soir")); // "Bonsoir"

// toUpperCase() - Convertit une cha√Æne en majuscules.
console.log("bonjour".toUpperCase()); // "BONJOUR"

// toLowerCase() - Convertit une cha√Æne en minuscules.
console.log("BONJOUR".toLowerCase()); // "bonjour"

// trim() - Supprime les espaces autour d‚Äôune cha√Æne.
console.log("  Bonjour  ".trim()); // "Bonjour"

// split(separator) - S√©pare une cha√Æne en tableau selon un s√©parateur.
console.log("Bonjour le monde".split(" ")); // ["Bonjour", "le", "monde"]

// üìå Manipulation des tableaux (Array)
// indexOf(value) - Trouve l'index d‚Äôun √©l√©ment dans un tableau.
console.log([10, 20, 30].indexOf(20)); // 1

// includes(value) - V√©rifie si un tableau contient un √©l√©ment.
console.log([10, 20, 30].includes(20)); // true

// push(value) - Ajoute un √©l√©ment √† la fin du tableau.
let arr = [1, 2];
arr.push(3);
console.log(arr); // [1, 2, 3]

// pop() - Supprime le dernier √©l√©ment.
arr.pop();
console.log(arr); // [1, 2]

// shift() - Supprime le premier √©l√©ment.
arr.shift();
console.log(arr); // [2]

// unshift(value) - Ajoute un √©l√©ment au d√©but.
arr.unshift(1);
console.log(arr); // [1, 2]

// slice(start, end) - Extrait une partie d'un tableau.
console.log([10, 20, 30, 40].slice(1, 3)); // [20, 30]

// splice(index, deleteCount, newItems...) - Modifie un tableau (ajout/suppression).
arr = [10, 20, 30];
arr.splice(1, 1, 25);
console.log(arr); // [10, 25, 30]

// join(separator) - Transforme un tableau en cha√Æne.
console.log(["Bonjour", "le", "monde"].join(" ")); // "Bonjour le monde"

// map(callback) - Transforme chaque √©l√©ment d'un tableau.
console.log([1, 2, 3].map(x => x * 2)); // [2, 4, 6]

// filter(callback) - Filtre les √©l√©ments selon une condition.
console.log([10, 20, 30].filter(x => x > 15)); // [20, 30]

// reduce(callback, initialValue) - R√©duit un tableau en une seule valeur.
console.log([1, 2, 3].reduce((acc, x) => acc + x, 0)); // 6

// sort() - Trie un tableau.
console.log([30, 10, 20].sort((a, b) => a - b)); // [10, 20, 30]

// reverse() - Inverse l'ordre des √©l√©ments.
console.log([1, 2, 3].reverse()); // [3, 2, 1]

// üõ† Manipulation des objets (Object)
// Object.keys(obj) - R√©cup√®re les cl√©s d‚Äôun objet.
let obj = { a: 1, b: 2 };
console.log(Object.keys(obj)); // ["a", "b"]

// Object.values(obj) - R√©cup√®re les valeurs d‚Äôun objet.
console.log(Object.values(obj)); // [1, 2]

// Object.entries(obj) - Renvoie un tableau de paires [cl√©, valeur].
console.log(Object.entries(obj)); // [["a", 1], ["b", 2]]

// Object.assign(target, source) - Copie les propri√©t√©s d‚Äôun objet dans un autre.
let obj1 = { a: 1 }, obj2 = { b: 2 };
Object.assign(obj1, obj2);
console.log(obj1); // { a: 1, b: 2 }

// JSON.stringify(obj) - Convertit un objet en cha√Æne JSON.
console.log(JSON.stringify({ a: 1 })); // '{"a":1}'

// JSON.parse(jsonString) - Convertit une cha√Æne JSON en objet.
console.log(JSON.parse('{"a":1}')); // { a: 1 }
